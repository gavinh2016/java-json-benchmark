# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 0.00% complete, ETA 00:10:40
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
4204.591 ops/s
# Warmup Iteration   2: 5730.318 ops/s
# Warmup Iteration   3: 5739.140 ops/s
# Warmup Iteration   4: 5772.088 ops/s
# Warmup Iteration   5: 5759.719 ops/s
Iteration   1: 5762.619 ops/s
Iteration   2: 5775.129 ops/s
Iteration   3: 5755.132 ops/s
Iteration   4: 5716.257 ops/s
Iteration   5: 5731.597 ops/s
Iteration   6: 5732.242 ops/s
Iteration   7: 5804.986 ops/s
Iteration   8: 5787.892 ops/s
Iteration   9: 5755.941 ops/s
Iteration  10: 5729.686 ops/s

# Run progress: 12.50% complete, ETA 00:09:32
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
5041.385 ops/s
# Warmup Iteration   2: 5742.650 ops/s
# Warmup Iteration   3: 5755.366 ops/s
# Warmup Iteration   4: 5747.954 ops/s
# Warmup Iteration   5: 5789.754 ops/s
Iteration   1: 5803.812 ops/s
Iteration   2: 5783.686 ops/s
Iteration   3: 5683.041 ops/s
Iteration   4: 5713.016 ops/s
Iteration   5: 5770.676 ops/s
Iteration   6: 5804.080 ops/s
Iteration   7: 5770.631 ops/s
Iteration   8: 5770.668 ops/s
Iteration   9: 5772.210 ops/s
Iteration  10: 5727.119 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  5757.521 ±(99.9%) 29.203 ops/s [Average]
  (min, avg, max) = (5683.041, 5757.521, 5804.986), stdev = 33.630
  CI (99.9%): [5728.318, 5786.724] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 25.00% complete, ETA 00:08:10
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
3734.608 ops/s
# Warmup Iteration   2: 4064.293 ops/s
# Warmup Iteration   3: 4057.324 ops/s
# Warmup Iteration   4: 3967.188 ops/s
# Warmup Iteration   5: 3999.493 ops/s
Iteration   1: 4026.218 ops/s
Iteration   2: 3938.095 ops/s
Iteration   3: 3955.528 ops/s
Iteration   4: 3984.990 ops/s
Iteration   5: 4023.096 ops/s
Iteration   6: 4021.182 ops/s
Iteration   7: 3978.097 ops/s
Iteration   8: 4015.233 ops/s
Iteration   9: 3944.985 ops/s
Iteration  10: 3975.637 ops/s

# Run progress: 37.50% complete, ETA 00:06:48
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
3832.528 ops/s
# Warmup Iteration   2: 4041.807 ops/s
# Warmup Iteration   3: 4062.425 ops/s
# Warmup Iteration   4: 4069.880 ops/s
# Warmup Iteration   5: 4077.202 ops/s
Iteration   1: 4076.966 ops/s
Iteration   2: 4040.477 ops/s
Iteration   3: 4073.577 ops/s
Iteration   4: 4077.518 ops/s
Iteration   5: 4084.604 ops/s
Iteration   6: 4077.699 ops/s
Iteration   7: 4075.019 ops/s
Iteration   8: 4027.011 ops/s
Iteration   9: 4010.225 ops/s
Iteration  10: 4082.062 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  4024.411 ±(99.9%) 42.492 ops/s [Average]
  (min, avg, max) = (3938.095, 4024.411, 4084.604), stdev = 48.933
  CI (99.9%): [3981.919, 4066.903] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 50.00% complete, ETA 00:05:27
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
5340.431 ops/s
# Warmup Iteration   2: 5413.787 ops/s
# Warmup Iteration   3: 5460.183 ops/s
# Warmup Iteration   4: 5448.857 ops/s
# Warmup Iteration   5: 5465.943 ops/s
Iteration   1: 5395.143 ops/s
Iteration   2: 5405.724 ops/s
Iteration   3: 5501.480 ops/s
Iteration   4: 5440.707 ops/s
Iteration   5: 5532.958 ops/s
Iteration   6: 5454.613 ops/s
Iteration   7: 5479.750 ops/s
Iteration   8: 5434.970 ops/s
Iteration   9: 5496.061 ops/s
Iteration  10: 5481.145 ops/s

# Run progress: 62.50% complete, ETA 00:04:05
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
5270.480 ops/s
# Warmup Iteration   2: 5394.422 ops/s
# Warmup Iteration   3: 5435.154 ops/s
# Warmup Iteration   4: 5403.696 ops/s
# Warmup Iteration   5: 5419.952 ops/s
Iteration   1: 5341.066 ops/s
Iteration   2: 5377.551 ops/s
Iteration   3: 5348.937 ops/s
Iteration   4: 5457.628 ops/s
Iteration   5: 5335.561 ops/s
Iteration   6: 5456.531 ops/s
Iteration   7: 5412.092 ops/s
Iteration   8: 5461.697 ops/s
Iteration   9: 5456.974 ops/s
Iteration  10: 5524.233 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  5439.741 ±(99.9%) 50.542 ops/s [Average]
  (min, avg, max) = (5335.561, 5439.741, 5532.958), stdev = 58.204
  CI (99.9%): [5389.199, 5490.283] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 75.00% complete, ETA 00:02:43
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
5403.656 ops/s
# Warmup Iteration   2: 5588.463 ops/s
# Warmup Iteration   3: 5605.496 ops/s
# Warmup Iteration   4: 5609.520 ops/s
# Warmup Iteration   5: 5593.641 ops/s
Iteration   1: 5590.372 ops/s
Iteration   2: 5571.485 ops/s
Iteration   3: 5643.586 ops/s
Iteration   4: 5621.535 ops/s
Iteration   5: 5646.100 ops/s
Iteration   6: 5573.382 ops/s
Iteration   7: 5554.424 ops/s
Iteration   8: 5529.545 ops/s
Iteration   9: 5628.977 ops/s
Iteration  10: 5638.916 ops/s

# Run progress: 87.50% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
5172.639 ops/s
# Warmup Iteration   2: 5312.194 ops/s
# Warmup Iteration   3: 5272.021 ops/s
# Warmup Iteration   4: 5347.270 ops/s
# Warmup Iteration   5: 5308.157 ops/s
Iteration   1: 5340.318 ops/s
Iteration   2: 5295.055 ops/s
Iteration   3: 5345.705 ops/s
Iteration   4: 5297.561 ops/s
Iteration   5: 5292.725 ops/s
Iteration   6: 5199.231 ops/s
Iteration   7: 5224.568 ops/s
Iteration   8: 5322.732 ops/s
Iteration   9: 5398.031 ops/s
Iteration  10: 5306.072 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  5451.016 ±(99.9%) 139.191 ops/s [Average]
  (min, avg, max) = (5199.231, 5451.016, 5646.100), stdev = 160.293
  CI (99.9%): [5311.825, 5590.207] (assumes normal distribution)


# Run complete. Total time: 00:10:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt     Score     Error  Units
Serialization.fastjson             thrpt   20  5757.521 ±  29.203  ops/s
Serialization.gson                 thrpt   20  4024.411 ±  42.492  ops/s
Serialization.jackson              thrpt   20  5439.741 ±  50.542  ops/s
Serialization.jackson_afterburner  thrpt   20  5451.016 ± 139.191  ops/s
