# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 0.00% complete, ETA 00:10:40
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
186782.587 ops/s
# Warmup Iteration   2: 259986.039 ops/s
# Warmup Iteration   3: 258405.575 ops/s
# Warmup Iteration   4: 258625.857 ops/s
# Warmup Iteration   5: 257859.263 ops/s
Iteration   1: 260169.532 ops/s
Iteration   2: 258121.318 ops/s
Iteration   3: 256178.365 ops/s
Iteration   4: 253791.947 ops/s
Iteration   5: 255827.317 ops/s
Iteration   6: 259667.739 ops/s
Iteration   7: 262219.723 ops/s
Iteration   8: 262776.491 ops/s
Iteration   9: 261636.875 ops/s
Iteration  10: 257628.885 ops/s

# Run progress: 12.50% complete, ETA 00:09:33
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
181304.503 ops/s
# Warmup Iteration   2: 259968.563 ops/s
# Warmup Iteration   3: 261573.562 ops/s
# Warmup Iteration   4: 261216.571 ops/s
# Warmup Iteration   5: 260517.477 ops/s
Iteration   1: 260411.515 ops/s
Iteration   2: 261003.389 ops/s
Iteration   3: 258881.860 ops/s
Iteration   4: 259275.071 ops/s
Iteration   5: 261360.737 ops/s
Iteration   6: 260479.101 ops/s
Iteration   7: 261381.598 ops/s
Iteration   8: 260375.184 ops/s
Iteration   9: 254276.359 ops/s
Iteration  10: 256173.826 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  259081.842 ±(99.9%) 2295.590 ops/s [Average]
  (min, avg, max) = (253791.947, 259081.842, 262776.491), stdev = 2643.605
  CI (99.9%): [256786.252, 261377.432] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 25.00% complete, ETA 00:08:10
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
219927.813 ops/s
# Warmup Iteration   2: 250846.244 ops/s
# Warmup Iteration   3: 255602.025 ops/s
# Warmup Iteration   4: 253186.342 ops/s
# Warmup Iteration   5: 256520.038 ops/s
Iteration   1: 253264.921 ops/s
Iteration   2: 250789.032 ops/s
Iteration   3: 251243.559 ops/s
Iteration   4: 252748.611 ops/s
Iteration   5: 255315.736 ops/s
Iteration   6: 254166.493 ops/s
Iteration   7: 254560.208 ops/s
Iteration   8: 253167.151 ops/s
Iteration   9: 247545.462 ops/s
Iteration  10: 250463.540 ops/s

# Run progress: 37.50% complete, ETA 00:06:48
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
200835.300 ops/s
# Warmup Iteration   2: 256263.740 ops/s
# Warmup Iteration   3: 259712.940 ops/s
# Warmup Iteration   4: 260033.952 ops/s
# Warmup Iteration   5: 265153.712 ops/s
Iteration   1: 264912.079 ops/s
Iteration   2: 259855.164 ops/s
Iteration   3: 262089.983 ops/s
Iteration   4: 264331.392 ops/s
Iteration   5: 263872.502 ops/s
Iteration   6: 264061.851 ops/s
Iteration   7: 260734.405 ops/s
Iteration   8: 261393.790 ops/s
Iteration   9: 259977.828 ops/s
Iteration  10: 262031.559 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  257326.263 ±(99.9%) 4798.456 ops/s [Average]
  (min, avg, max) = (247545.462, 257326.263, 264912.079), stdev = 5525.909
  CI (99.9%): [252527.807, 262124.719] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 50.00% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
321497.889 ops/s
# Warmup Iteration   2: 392812.874 ops/s
# Warmup Iteration   3: 394673.790 ops/s
# Warmup Iteration   4: 385717.857 ops/s
# Warmup Iteration   5: 386122.256 ops/s
Iteration   1: 383526.870 ops/s
Iteration   2: 381125.749 ops/s
Iteration   3: 389737.772 ops/s
Iteration   4: 389697.522 ops/s
Iteration   5: 384997.608 ops/s
Iteration   6: 380079.820 ops/s
Iteration   7: 389529.962 ops/s
Iteration   8: 376266.898 ops/s
Iteration   9: 385773.960 ops/s
Iteration  10: 388951.561 ops/s

# Run progress: 62.50% complete, ETA 00:04:05
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
320050.509 ops/s
# Warmup Iteration   2: 388070.349 ops/s
# Warmup Iteration   3: 385829.595 ops/s
# Warmup Iteration   4: 382303.470 ops/s
# Warmup Iteration   5: 384153.978 ops/s
Iteration   1: 371184.967 ops/s
Iteration   2: 380252.077 ops/s
Iteration   3: 382476.829 ops/s
Iteration   4: 382697.018 ops/s
Iteration   5: 383615.236 ops/s
Iteration   6: 380391.745 ops/s
Iteration   7: 380105.940 ops/s
Iteration   8: 378409.660 ops/s
Iteration   9: 385363.024 ops/s
Iteration  10: 385055.285 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  382961.975 ±(99.9%) 4138.548 ops/s [Average]
  (min, avg, max) = (371184.967, 382961.975, 389737.772), stdev = 4765.958
  CI (99.9%): [378823.427, 387100.523] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 75.00% complete, ETA 00:02:43
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
337966.217 ops/s
# Warmup Iteration   2: 393735.549 ops/s
# Warmup Iteration   3: 389621.625 ops/s
# Warmup Iteration   4: 389085.948 ops/s
# Warmup Iteration   5: 388251.457 ops/s
Iteration   1: 386895.550 ops/s
Iteration   2: 385346.254 ops/s
Iteration   3: 389758.337 ops/s
Iteration   4: 388256.888 ops/s
Iteration   5: 387280.682 ops/s
Iteration   6: 385812.012 ops/s
Iteration   7: 380794.060 ops/s
Iteration   8: 386979.783 ops/s
Iteration   9: 385915.639 ops/s
Iteration  10: 388854.096 ops/s

# Run progress: 87.50% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=7607 as seed for Random
337845.665 ops/s
# Warmup Iteration   2: 365706.332 ops/s
# Warmup Iteration   3: 386862.411 ops/s
# Warmup Iteration   4: 395083.381 ops/s
# Warmup Iteration   5: 391201.692 ops/s
Iteration   1: 394259.699 ops/s
Iteration   2: 403312.881 ops/s
Iteration   3: 404271.465 ops/s
Iteration   4: 403418.653 ops/s
Iteration   5: 401656.603 ops/s
Iteration   6: 397852.701 ops/s
Iteration   7: 391677.685 ops/s
Iteration   8: 397488.752 ops/s
Iteration   9: 401389.512 ops/s
Iteration  10: 406725.190 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  393397.322 ±(99.9%) 6858.765 ops/s [Average]
  (min, avg, max) = (380794.060, 393397.322, 406725.190), stdev = 7898.564
  CI (99.9%): [386538.557, 400256.087] (assumes normal distribution)


# Run complete. Total time: 00:10:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt       Score      Error  Units
Deserialization.fastjson             thrpt   20  259081.842 ± 2295.590  ops/s
Deserialization.gson                 thrpt   20  257326.263 ± 4798.456  ops/s
Deserialization.jackson              thrpt   20  382961.975 ± 4138.548  ops/s
Deserialization.jackson_afterburner  thrpt   20  393397.322 ± 6858.765  ops/s
